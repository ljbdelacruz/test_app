name: PROD Increment Version on PR Merged to Main

on:
  pull_request:
    types: [closed]
  workflow_run:
    workflows: ["Flutter Unit Tests"]
    types:
      - completed

jobs:
  increment-version:
    if: ${{ (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main') || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 

      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: 'Set default tag if none found'
        if: ${{ steps.previoustag.outputs.tag == '' }}
        run: echo "::set-output name=tag::0.0.0"

      - name: Increment version
        id: incrementversion
        run: |
          previous_tag=${{ steps.previoustag.outputs.tag }}
          IFS='.' read -r -a version_parts <<< "$previous_tag"
          patch_version=$((version_parts[2] + 1))
          new_version="${version_parts[0]}.${version_parts[1]}.$patch_version"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Write new version to VERSION.txt
        run: echo "${{ env.new_version }}" > VERSION.txt

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.5'

      - name: Increment version
        run: python scripts/version_update.py

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m 'ci: version release update'
          git push

      - name: Create tag for release
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "${{  env.new_version }} --release"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

