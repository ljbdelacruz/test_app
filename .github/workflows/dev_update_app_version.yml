name: DEV Increment Version on PR Merged to Develop

on:
  workflow_run:
    workflows: ["Flutter Unit Tests"]
    types:
      - completed
  pull_request:
    branches:
      - develop
    types: [closed]
  workflow_dispatch:
permissions:
  contents: write

jobs:
  increment-version:
    if: ${{ (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'develop') || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'develop') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 

      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  
      - name: 'Set default tag if none found'
        if: ${{ steps.previoustag.outputs.tag == '' }}
        run: echo "::set-output name=tag::1.0.0"

      - name: 'Print Github Ref'
        run: | 
          echo "Github Ref"
          echo "${{ github.ref }}"
          echo "${{ github.event.pull_request.head.ref }}"
  
      - name: 'Get next version'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag || '1.0.0' }}   

      - name: Determine next version
        id: nextversion
        run: |
          if [[ "${{ github.event.pull_request.head.ref }}" == *"major"* ]]; then
            echo "next_version=${{ steps.semvers.outputs.major }}" >> $GITHUB_ENV
          elif [[ "${{ github.event.pull_request.head.ref }}" == *"minor"* ]]; then
            echo "next_version=${{ steps.semvers.outputs.minor }}" >> $GITHUB_ENV
          elif [[ "${{ github.event.pull_request.head.ref }}" == *"patch"* ]]; then
            echo "next_version=${{ steps.semvers.outputs.patch }}" >> $GITHUB_ENV
          else
            echo "next_version=${{ steps.semvers.outputs.patch }}" >> $GITHUB_ENV
          fi

      - name: Write next version to VERSION.txt
        run: echo "${{ env.next_version }}" > VERSION.txt

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.5'

      - name: Increment version
        run: python scripts/version_update.py

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m 'ci: version upgrade'
          git push origin develop

      - name: Create tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "${{ env.next_version }}"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"